import { headerData, footerData, landingSubjectsData } from './menu-data';
export const instanceData = {
  lang: "ta",
  headerData: headerData,
  footerData: footerData,
  strings: {
    header: {
      slogan: "роЕройрпИро╡ро░рпБроХрпНроХрпБроорпН родро┐ро▒роирпНрод роЙро░ро┐роороорпН роЙро│рпНро│ роУро░рпН роЗрогрпИропродрпНродро│роорпН",
      search: "родрпЗроЯрпБроХ",
      login: "роЙро│рпНроирпБро┤рпИ"
    },
    search: {
      privacy: 'The search is provided by Google. See our %privacypolicy% to find out what information is processed.',
      agree: 'Agree'
    },
    footer: {
      summaryHeading: "роХро▒рпНрокродро▒рпНроХрпБ ро╡ро┐роХрпНроХро┐рокрпАроЯро┐ропро╛ рокрпЛройрпНро▒родрпБ Serlo.org.",
      summaryText: "роиро╛роЩрпНроХро│рпН роХро▓рпНро╡ро┐ропрпИ роЕройрпИро╡ро░рпБроХрпНроХрпБроорпН роЗро▓ро╡роЪрооро╛роХроХрпН роХро┐роЯрпИроХрпНроХроЪрпН роЪрпЖропрпНроп роЕропро░ро╛родрпБ роЙро┤рпИроХрпНроХро┐ро▒рпЛроорпН",
      learnMore: "роорпЗро▓рпБроорпН роЕро▒ро┐роХ",
      participate: "роЪрпЗро░рпБроЩрпНроХро│рпН",
      donate: "родро╛ройроорпН роЪрпЖропрпН",
      toTop: "роорпЗро▓рпН роирпЗро╛роХрпНроХро┐"
    },
    categories: {
      articles: "роХроЯрпНроЯрпБро░рпИроХро│рпН",
      courses: "ро╡роХрпБрокрпНрокрпБрокрпНрокрпБроХро│рпН",
      videos: "роХро╛рогрпКро│ро┐роХро│рпН",
      applets: 'Applets',
      folders: 'Folders',
      exercises: "рокропро┐ро▒рпНроЪро┐роХро│рпН",
      events: "роиро┐роХро┤рпНро╡рпБроХро│рпН"
    },
    entities: {
      applet: "роЖрокрпНро▓рпЖроЯрпН",
      article: "роХроЯрпНроЯрпБро░рпИ",
      course: "ро╡роХрпБрокрпНрокрпБ",
      coursePage: "ро╡роХрпБрокрпНрокрпБ-рокроХрпНроХроорпН",
      event: 'Event',
      exercise: 'Exercise',
      exerciseGroup: "рокропро┐ро▒рпНроЪро┐рокрпН рокродро┐ро╡рпБроХро│рпН",
      folder: "роЕроЯрпИро╡рпБ",
      groupedExercise: 'Grouped Exercise',
      page: "рокроХрпНроХроорпН",
      solution: "родрпАро░рпНро╡рпБ",
      taxonomyTerm: 'Taxonomy Term',
      user: "рокропройро░рпН",
      video: "роХро╛рогрпКро│ро┐",
      topicFolder: 'Exercise folder',
      comment: "роХро░рпБродрпНродрпБ",
      revision: "роорпАроЯрпНроЯро▓рпН",
      thread: 'Thread',
      threads: 'Threads',
      topic: 'Topic',
      subject: 'Subject',
      userProfile: 'User Profile',
      privacyPolicy: 'Privacy Policy'
    },
    roles: {
      donor: "Donor",
      author: 'Author',
      reviewer: 'Reviewer'
    },
    share: {
      button: "рокроХро┐ро░рпНроХ",
      title: "рокроХро┐ро░рпН!",
      copyLink: "роЗрогрпИрокрпНрокрпИ роироХро▓рпЖроЯрпБроХрпНроХро╡рпБроорпН",
      copySuccess: "роЗрогрпИрокрпНрокрпБ роироХро▓рпЖроЯрпБроХрпНроХрокрпНрокроЯрпНроЯродрпБ!",
      close: "роирпЖро░рпБроХрпНроХрооро╛рой"
    },
    edit: {
      button: "родрпЖро╛роХрпБ",
      unrevised: 'Show unrevised revisions'
    },
    license: {
      readMore: "родроХро╡ро▓рпН"
    },
    course: {
      showPages: "ро╡роХрпБрокрпНрокрпБ роорпЗро▓рпЛроЯрпНроЯродрпНродрпИроХрпН роХро╛роЯрпНроЯро╡рпБроорпН",
      pages: 'Course overview',
      next: "роЕроЯрпБродрпНродрпБ"
    },
    content: {
      show: "роХро╛роЯрпНроЯрпБ",
      hide: "рооро▒рпИ",
      prerequisite: 'For this task you need the following basic knowledge:',
      task: 'Task',
      right: "роЪро░ро┐",
      wrong: "рокро┐ро┤рпИ",
      check: "роЪро░ро┐рокро╛ро░рпНроХрпНроХро╡рпБроорпН",
      yourAnswer: "роЙроЩрпНроХро│рпН рокродро┐ро▓рпН:",
      chooseOption: 'Click on one of the options.',
      trashedNotice: "роЗроирпНрод роЙро│рпНро│роЯроХрпНроХроорпН роХрпБрокрпНрокрпИропро╛роХ роХрпБро▒ро┐роХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ."
    },
    consent: {
      title: 'Consent for external Content',
      intro: 'While using this site you may allowed us to load content from external providers. You can read about the details in the %privacypolicy%.',
      revokeTitle: 'Revoke',
      revokeText: 'Here you can revoke your consent. In this case we ask again, before we load content from those providers',
      noConsent: 'No content saved.',
      revokeConsent: 'Revoke consent'
    },
    embed: {
      text: 'By clicking on image or button above you agree that external content from %provider% will be loaded. Also personal data may be transferred to this service in accordance with our %privacypolicy%.',
      video: 'Play Video from %provider%',
      applet: 'Load Applet from %provider%',
      twingle: 'Load Donation Form'
    },
    notifications: {
      notifications: "роЕро▒ро┐ро╡ро┐рокрпНрокрпБроХро│рпН",
      pleaseLogInLink: 'Please log in',
      pleaseLogInText: 'to see your notifications.'
    },
    comments: {
      question: 'Do you have a question?',
      commentsOne: "роХро░рпБродрпНродрпБ",
      commentsMany: "роХро░рпБродрпНродрпБроХро│рпН",
      submit: "роЗрогрпИроХрпНроХ",
      archiveThread: 'Archive thread',
      deleteThread: 'Delete thread',
      deleteComment: 'Delete comment',
      postedOn: 'Posted on',
      placeholder: "Your question or suggestionтАж",
      placeholderReply: "роЙроЩрпНроХро│рпН рокродро┐ро▓рпН:",
      loading: 'Looking for comments ...',
      error: 'Sorry, comments could not be loaded, please try again later.',
      showMoreReply: 'Show one more reply',
      showMoreReplies: 'Show %number% more replies',
      showArchived: 'Show archived %threads%'
    },
    revisions: {
      toOverview: "Back to overview",
      changes: "рооро╛ро▒рпНро▒роЩрпНроХро│рпН",
      title: "родро▓рпИрокрпНрокрпБ",
      content: "роЙроЯрпНрокрпКро░рпБро│рпН",
      metaTitle: "Meta Title",
      metaDescription: "Meta Description",
      compare: "Compare",
      currentVersion: "Current Version",
      thisVersion: "This Version",
      thisIsCurrentVersion: "This is the currently accepted version.",
      by: 'By'
    },
    errors: {
      title: 'ЁЯШм Websites make mistakes sometimesтАж',
      defaultMessage: 'So sorry, we ran into a problem loading this content.',
      temporary: 'The good news? The problem seems to be temporary, so please try again later.',
      permanent: 'We will see what we can do about thatтАж ',
      typeNotSupported: 'Please try reloading this page.',
      refreshNow: 'Refresh now',
      backToPrevious: 'Back to previous page',
      backToHome: 'To our home page'
    },
    print: {
      warning: 'Important: To make sure all images and formulas print, please scroll down to the end of the page once. Thank you!'
    },
    profiles: {
      aboutMe: 'About me',
      recentActivities: 'Recent activities',
      showAllActivities: 'Show all activities',
      lastSeen: 'Last seen',
      roles: 'Roles'
    },
    notices: {
      welcome: 'ЁЯСЛ Welcome %username%!',
      bye: 'ЁЯСЛ See you soon!',
      revisionSaved: 'Revision is saved and will be reviewed soon ЁЯСН',
      revisionAccepted: 'Revision was successfully accepted тЬЕ',
      revisionRejected: 'Revision was successfully rejected тЭО',
      revisionSavedAccepted: 'Revision was successfully saved and accepted тЬЕ'
    }
  }
};
export const instanceLandingData = {
  lang: "ta",
  subjectsData: landingSubjectsData,
  strings: {
    vision: "роиро╛роорпН роЪроорооро╛рой роХро▓рпНро╡ро┐ ро╡ро╛ропрпНрокрпНрокрпБроХро│рпИ роирпЛроХрпНроХро┐ роЗрогрпИроирпНродрпБ рокрогро┐рокрпБро░ро┐ропрпБроорпН роТро░рпБ роХрпБро┤рпБ. роЗроирпНрод роЗрогрпИропродрпНродро│родрпНродро┐ро▓рпН роОрогрпНрогро▒рпНро▒ ро╡ро┐ро╡ро░роХрпН роХроЯрпНроЯрпБро░рпИроХро│рпН, рокропро┐ро▒рпНроЪро┐роХро│рпН рооро▒рпНро▒рпБроорпН роТро▓ро┐рокрпН рокрпЗро┤рпИроХро│рпН роЕройрпИродрпНродрпБрокрпН рокро╛роЯроЩрпНроХро│рпБроХрпНроХрпБроорпН ро╡ро┤роЩрпНроХрокрпНрокроЯрпНроЯрпБро╡ро░рпБроХро┐ройрпНро▒рой. роЗро╡рпИ роЕройрпИродрпНродрпБроорпН роЗро▓ро╡роЪрооро╛роХ роЙро▓роХроорпН роорпБро┤рпБро╡родрпБроорпН роЙро│рпНро│ рооро╛рогро╡ро░рпНроХро│рпБроХрпНроХро╛роХ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯрпБро╡ро░рпБроХро┐ройрпНро▒рой. роЗройро┐ ро╡ро░рпБроорпН роХро╛ро▓роЩрпНроХро│ро┐ро▓рпН, родрооро┐ро┤рпНроорпКро┤ро┐ропро┐ро▓рпБроорпН роЗро╡рпНро╡ро╛ро▒ро╛рой роЗро▓ро╡роЪрокрпН рокро╛роЯродрпНродро┐роЯрпНроЯроЩрпНроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХ роирпАроЩрпНроХро│рпБроорпН роОроорпНроорпБроЯройрпН роЗрогрпИроирпНродрпБ рокрогро┐ропро╛ро▒рпНро▒ро▓ро╛роорпН.",
    learnMore: "роорпЗро▓рпБроорпН роЕро▒ро┐роХ",
    democraticallyStructured: "роЬройроиро╛ропроХ ро░рпАродро┐ропро╛роХ",
    nonProfit: "роЗро▓ро╛рок роирпЛроХрпНроХро▒рпНро▒родрпБ",
    transparent: "роТро│ро┐ рокрпБроХрпБроорпН",
    openlyLicensed: "родро┐ро▒роирпНрод роЙро░ро┐роороорпН",
    adFree: "ро╡ро┐ро│роорпНрокро░рооро┐ройрпНро▒ро┐",
    freeOfCharge: "роЗро▓ро╡роЪроорпН",
    wikiTitle: "Serlo роХро▒рпНрокродро▒рпНроХрпБ ро╡ро┐роХрпНроХро┐рокрпАроЯро┐ропро╛ рокрпЛройрпНро▒родрпБ",
    wikiText: "Serlo.org ро╡ро┐роХрпНроХро┐рокрпАроЯро┐ропро╛рокрпЛро▓ родро┐ро▒роирпНрод роЙро░ро┐роороорпН роХрпКрогрпНроЯ роУро░рпН роЗрогрпИропродрпНродро│роорпН. роЗродрпБ роОроорпН роОро┤рпБродрпНродро╛ро│ро░рпН роХрпБро┤рпБро╡ро╛ро▓рпН роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпБроХро┐ройрпНро▒родрпБ.",
    movementTitle: "роирпАроЩрпНроХро│рпБроорпН роЗродро┐ро▓рпН рокрогрпНрогро┐ропро╛ро▒рпНро▒ро▓ро╛роорпН",
    callForAuthors: "роЖроЪро┐ро░ро┐ропро░рпНроХро│рпБроорпН роЖро░рпНро╡роорпБро│рпНро│ роОро┤рпБродрпНродро╛ро│ро░рпНроХро│рпБроорпН рокро╛роЯроЩрпНроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХ рокро▓ ро╡ро┤ро┐роХро│ро┐ро▓рпН роЙродро╡ро▓ро╛роорпН. рокрпБродрпБрокрпН рокропро┐ро▒рпНроЪро┐роХро│рпИ роЙро░рпБро╡ро╛роХрпНроХрпБро╡родро▒рпНроХрпБроорпН роЗроирпНродродрпН родро│родрпНродро┐ройрпН роЪро┐ро▓ роЙро│рпНро│роЯроХрпНроХроЩрпНроХро│рпИ роЗройрпНройрпБроорпН роорпЗроорпНрокроЯрпБродрпНродрпБро╡родро▒рпНроХрпБроорпН роирпАроЩрпНроХро│рпН роЙродро╡ро▓ро╛роорпН. роЕродро▒рпНроХрпБ роХрпАро┤рпБро│рпНро│ роЗрогрпИропродрпНродро┐ро▒рпНроХрпБроЪрпН роЪрпЖро▓рпНро▓ро╡рпБроорпН.",
    communityLink: "роЖроЪро┐ро░ро┐ропро░рпНроХро│рпБроХрпНроХро╛рой рокроХрпНроХродрпНродрпИ  рокро╛ро░рпНро╡рпИропро┐роЯрпБроЩрпНроХро│рпН",
    callForOther: "роиро╛роЩрпНроХро│рпН рокро▓ ро╡роХрпИропро╛рой ро╡рпЗро▓рпИро╡ро╛ропрпНрокрпНрокрпБроХро│рпИропрпБроорпН рокрпКродрпБроЪрпНроЪрпЗро╡рпИропро╛роХрокрпН рокрогро┐ропро╛ро▒рпНро▒рпБроорпН ро╡ро╛ропрпНрокрпНрокрпБроХро│рпИропрпБроорпН ро╡ро┤роЩрпНроХрпБроХро┐ройрпНро▒рпЛроорпН. роЗроирпНрод роЗрогрпИропродрпНродро│родро┐ро▒рпНроХрпБ роорпКро┤ро┐рокрпЖропро░рпНрокрпНрокро╛ро│ро░рпНроХро│рпН, ро╡роЯро┐ро╡роорпИрокрпНрокро╛ро│ро░рпНроХро│рпН, родрпКро▓рпИродрпНродрпКроЯро░рпНрокро╛ро│ро░рпНроХро│рпН рокрпЛройрпНро▒ родрпБро▒рпИ роЪро╛ро░рпНроирпНродро╡ро░рпНроХро│рпИ роиро╛роЩрпНроХро│рпН родрпЗроЯро┐ роиро┐ро▒рпНроХро┐ройрпНро▒рпЛроорпН. роЗрогрпИроирпНродрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН.",
    getInvolved: "рокроЩрпНроХрпЗро▒рпНроХро╡рпБроорпН!"
  }
};
export const serverSideStrings = {
  title: "Serlo роЙроЯройрпН роХро▒рпНро▒рпБроХрпНроХрпКро│рпНро│рпБроЩрпНроХро│рпН!"
};
export const loggedInData = {
  authMenu: [{
    url: '/user/notifications',
    title: "роЕро▒ро┐ро╡ро┐рокрпНрокрпБроХро│рпН",
    icon: 'notifications'
  }, {
    url: '',
    title: "рокропройро░рпН",
    icon: 'user',
    children: [{
      url: '/user/public',
      title: "рокрпЖро╛родрпБро╡ро╛рой роЪрпБропро╡ро┐ро╡ро░роорпН"
    }, {
      url: '/user/settings',
      title: "роЪрпБропро╡ро┐ро╡ро░ родро┐ро░рпБродрпНродроорпН"
    }, {
      url: '/auth/password/change',
      title: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпНро▓рпИ рооро╛ро▒рпНро▒рпБ"
    }, {
      url: '/event/history/user/me',
      title: "роЪроорпАрокродрпНродро┐роп роЪрпЖропрпНродро╡рпИ"
    }, {
      url: '/subscriptions/manage',
      title: "роЪроирпНродро╛роХрпНроХро│рпН"
    }, {
      url: '/api/auth/logout',
      title: "ро╡рпЖро│ро┐ропрпЗро▒рпБ"
    }]
  }],
  strings: {
    tools: 'Other Tools',
    authorMenu: {
      log: "рокродро┐ро╡рпБ",
      settings: "роЕроорпИрокрпНрокрпБроХро│рпН",
      moveCoursePage: 'Move this page to another course',
      thisCoursePage: 'This course-page',
      addCoursePage: 'Add course-page',
      wholeCourse: 'Whole course',
      copyItems: 'Copy items',
      moveItems: 'Move items',
      addGroupedTextExercise: 'Add grouped-text-exercise',
      changeLicense: 'Change License',
      subscribe: "роЪроирпНродро╛",
      subscribeNotifications: 'Recieve notifications',
      subscribeNotificationsAndMail: 'Recieve notifications and emails',
      unsubscribeNotifications: "роЪроирпНродро╛ро╡рпИ роиро┐ро▒рпБродрпНродрпБродро▓рпН",
      convert: 'Convert (beta)',
      history: "ро╡ро░ро▓ро╛ро▒рпБ",
      editAssignments: "родро▓рпИрокрпНрокрпБ рооро▒рпНро▒рпБроорпН рокро╛роЯродрпНродро┐роЯрпНроЯ рокрогро┐роХро│рпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН.",
      moveToTrash: "роХрпБрокрпНрокрпИроХрпНроХрпБ роироХро░рпНродрпНродро╡рпБроорпН",
      restoreContent: 'Restore from trash',
      sort: 'Sort children',
      edit: "родро┐ро░рпБродрпНродроорпН",
      organize: "роТро┤рпБроЩрпНроХрпБрокроЯрпБродрпНрод",
      moveToGroupedTextExercise: 'Move content to other grouped-text-exercise',
      moveToTextExercise: 'Move content to other text-exercise',
      sortEntities: 'Sort content',
      newEntity: 'New Entity',
      editProfile: 'Edit profile'
    },
    notifications: {
      loadMore: "Load more",
      unknownProblem: "There was a problem loading the notifications, please try again later.",
      loading: "Loading notifications",
      hide: "Hide notifications for this content.",
      setThreadStateArchived: "%actor% archived %thread%.",
      setThreadStateUnarchived: "%actor% restored %thread%.",
      createComment: "%actor% commented in %thread%: %comment%.",
      createThread: "%actor% started %thread% on %object%.",
      createEntity: "%actor% created %object%.",
      setLicense: "%actor% changed the license of %repository%.",
      createEntityLink: "%actor% associated %child% with %parent%.",
      removeEntityLink: "%actor% dissociated %child% from %parent%.",
      createEntityRevision: "%actor% created a %revision% of %entity%.",
      checkoutRevision: "%actor% checked out %revision% in %repository%.",
      rejectRevision: "%actor% rejected a %revision% in %repository%.",
      createTaxonomyLink: "%actor% added %child% to %parent%.",
      removeTaxonomyLink: "%actor% removed %child% from %parent%.",
      createTaxonomyTerm: "%actor% created %term%.",
      setTaxonomyTerm: "%actor% updated %term%.",
      setTaxonomyParentDeleted: "%actor% removed the parent of %child%.",
      setTaxonomyParentChangedFrom: "%actor% changed parent of %child% from %previousparent% to %parent%.",
      setTaxonomyParentChanged: "%actor% changed parent of %child% to %parent%.",
      setUuidStateTrashed: "%actor% trashed %object%.",
      setUuidStateRestored: "%actor% restored %object%.",
      entityPlaceholderFallback: "роЙроЯрпНрокрпКро░рпБро│рпН"
    }
  }
};